#BlueJ class context
comment0.target=CarList
comment0.text=\r\n\ The\ CarList\ represents\ a\ function\ to\ store\ all\ the\ values\ about\ cars.\r\n\ \r\n\ @author\ Xiaofen\ Pan\r\n\ @verson\ 19/10/2017\r\n
comment1.params=
comment1.target=CarList()
comment1.text=\r\n\ Construct\ a\ CarList\ with\ new\ and\ empty\ value.\r\n\ The\ new\ car\ object\ with\ all\ the\ elements\ can\ be\ read\ in\ the\ individual\ lines.\ \r\n
comment10.params=min\ max
comment10.target=java.util.List\ getByPrice(int,\ int)
comment10.text=\r\n\ Get\ the\ car\ by\ given\ min\ and\ max\ price.\r\n\ @return\ Return\ the\ specific\ car\ by\ given\ min\ and\ max\ price.\r\n
comment11.params=color
comment11.target=java.util.List\ getByColor(java.lang.String)
comment11.text=\r\n\ Get\ the\ car\ by\ given\ colours.\r\n\ @return\ Return\ the\ specific\ car\ by\ colours.\r\n
comment12.params=
comment12.target=void\ commit()
comment12.text=\r\n\ To\ save\ the\ values\ of\ car\ in\ the\ text\ file.\r\n
comment13.params=
comment13.target=void\ addCar()
comment13.text=\r\n\ Add\ new\ cars\ by\ given\ the\ registration\ number,\ year,\ colours,\ company,\ price,\ model,\ and\ the\ car\ should\ not\ exist\ before.\r\n
comment14.params=
comment14.target=void\ editCar()
comment14.text=\r\n\ Edit\ the\ car\ by\ given\ registration\ number,\ and\ then,\ the\ colour\ and\ price\ can\ be\ edited.\r\n
comment15.params=
comment15.target=void\ deleteCar()
comment15.text=\r\n\ Delect\ the\ car\ with\ the\ given\ registration\ number.\r\n\ @exception\u0000\u0000\u0000\u0000\ Catch\ the\ input\ exceptions.\r\n
comment16.params=
comment16.target=Car\ searchByRegNumber()
comment16.text=\r\n\ Search\ the\ car\ with\ given\ registration\ number\ and\ make\ sure\ it\ is\ validate.\r\n\ @throws\ Throw\ the\ exception\ when\ the\ registration\ number\ is\ not\ validate.\r\n\ @return\ Return\ the\ car\ with\ the\ given\ registration\ number.\r\n
comment17.params=
comment17.target=java.util.List\ searchByCarMakeAndModel()
comment17.text=\r\n\ Search\ the\ car\ with\ given\ car\ make\ and\ model,\ and\ make\ sure\ it\ is\ validate.\r\n\ @throws\ Throw\ the\ exception\ when\ the\ car\ make\ and\ model\ are\ not\ validate.\r\n\ @return\ Return\ the\ car\ with\ the\ given\ car\ make\ and\ model.\r\n
comment18.params=
comment18.target=java.util.List\ searchByAge()
comment18.text=\r\n\ Search\ the\ car\ with\ given\ age,\ and\ make\ sure\ it\ is\ validate.\r\n\ @throws\ Throw\ the\ exception\ when\ the\ age\ are\ not\ validate.\r\n\ @return\ Return\ the\ car\ with\ the\ given\ age.\r\n
comment19.params=
comment19.target=java.util.List\ searchByPrice()
comment19.text=\r\n\ Search\ the\ car\ with\ given\ price,\ and\ make\ sure\ it\ is\ validate.\r\n\ @throws\ Throw\ the\ exception\ when\ the\ price\ are\ not\ validate.\r\n\ @return\ Return\ the\ car\ with\ the\ given\ price.\r\n
comment2.params=registrationNumber
comment2.target=Car\ getByRegistrationNumber(java.lang.String)
comment2.text=\r\n\ Get\ a\ car\ by\ registerion\ number,\ if\ the\ registerion\ number\ equals\ that\ of\ the\ existing\ car,\ it\ can\ return\ this\ car,\ otherwise,\r\n\ it\ cannot\ return\ the\ car.\r\n\ @param\ registerionNumber\ The\ registration\ number\ we\ input\ to\ get\ an\ exsiting\ car.\r\n\ @return\ car\ Return\ the\ car\ with\ the\ registerion\ number.\ \r\n
comment20.params=colour
comment20.target=java.util.List\ searchByColour(java.lang.String)
comment20.text=\r\n\ Search\ the\ car\ with\ given\ colour,\ and\ make\ sure\ it\ is\ validate.\r\n\ @throws\ Throw\ the\ exception\ when\ the\ colour\ are\ not\ validate.\r\n\ @return\ Return\ the\ car\ with\ the\ given\ colour.\r\n
comment21.params=
comment21.target=void\ showAllCars()
comment21.text=\r\n\ Show\ the\ all\ the\ cars\ ArrayList\ by\ invoking\ internal\ method.\r\n\ Print\ the\ car\ details\ to\ the\ terminal.\r\n
comment3.params=car
comment3.target=boolean\ persist(Car)
comment3.text=\r\n\ To\ check\ if\ the\ car\ has\ existed\ in\ the\ ArrayList.\r\n\ @return\ Return\ the\ added\ car.\r\n
comment4.params=car
comment4.target=void\ update(Car)
comment4.text=\r\n\ Update\ the\ car\ by\ given\ registration\ number,\ and\ then,\ the\ colour\ and\ price\ can\ be\ edited.\r\n\ @param\ car\ Car\ objects\ in\ the\ ArrayList.\r\n
comment5.params=car
comment5.target=void\ delete(Car)
comment5.text=\r\n\ Delete\ the\ car\ by\ given\ registration\ number.\r\n\ @param\ car\ The\ car\ object.\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getAll()
comment6.text=\r\n\ Get\ all\ the\ cars\ in\ the\ ArrayList.\r\n\ @return\ Return\ the\ car\ list.\r\n
comment7.params=make
comment7.target=java.util.List\ getByCarMake(java.lang.String)
comment7.text=\r\n\ Get\ the\ car\ by\ given\ car\ make.\r\n\ @param\ make\ The\ company\ of\ the\ car.\r\n\ @return\ Return\ the\ car\ by\ given\ car\ make.\r\n
comment8.params=model\ carList
comment8.target=java.util.List\ getByCarModel(java.lang.String,\ java.util.List)
comment8.text=\r\n\ Get\ the\ car\ by\ given\ model\ and\ car\ lists.\r\n\ @return\ Return\ the\ specific\ car\ by\ given\ model\ and\ car\ lists.\r\n
comment9.params=age
comment9.target=java.util.List\ getByAge(int)
comment9.text=\r\n\ Get\ the\ car\ by\ given\ age.\r\n\ @return\ Return\ the\ specific\ car\ by\ age.\r\n
numComments=22
