#BlueJ class context
comment0.target=Validation
comment0.text=\r\n\ The\ Validation\ class\ represents\ the\ function\ to\ check\ wether\ input\ values\ are\ validate\ or\ \r\n\ not,\ including\ "regNumber","carMake","carModel","age","minPrice","maxPrice","colours","year"\r\n\ and\ "str".\r\n\ \r\n\ @author\ Xiaofen\ Pan\r\n\ @verson\ \ \r\n
comment1.params=regNumber
comment1.target=void\ checkRegistrationNumber(java.lang.String)
comment1.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ Registration\ Number\ is\ validate\ or\ not.\r\n\ @param\ regNumber\ The\ registration\ number\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ registration\ number\ is\ not\ validate.\r\n
comment10.params=str
comment10.target=boolean\ stringRegex(java.lang.String)
comment10.text=\r\n\ match\ the\ string\ is\ composite\ of\ "0-9"\ /\ "A-Z"\ /\ "a-z",\r\n\ otherwise\ throw\ exception.\r\n\ @param\ str\ The\ regex\ can\ be\ from\ A-Z,a-z,0-9\r\n\ @return\ Return\ boolean\r\n
comment2.params=carMake\ carModel
comment2.target=void\ checkCarMakeAndModel(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ car\ make\ and\ model\ is\ validate\ or\ not.\r\n\ @param\ carMake\ carModel\ The\ car\ make\ and\ model\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ make\ and\ model\ is\ not\ validate.\r\n
comment3.params=age
comment3.target=void\ checkAge(int)
comment3.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ age\ is\ validate\ or\ not.\r\n\ @param\ age\ The\ car\ age\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ age\ is\ not\ validate.\r\n
comment4.params=minPrice
comment4.target=void\ checkMinPrice(int)
comment4.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ car\ min\ price\ is\ validate\ or\ not.\r\n\ @param\ minPrice\ The\ car\ min\ price\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ min\ price\ is\ not\ validate.\r\n
comment5.params=minPrice\ maxPrice
comment5.target=void\ checkMaxPrice(int,\ int)
comment5.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ car\ min\ price\ and\ max\ price\ are\ validate\ or\ not.\r\n\ @param\ minPrice\ MaxPrice\ The\ car\ min\ price\ and\ max\ price\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ min\ price\ and\ max\ price\ are\ not\ validate.\r\n
comment6.params=colours
comment6.target=void\ checkColours(java.util.List)
comment6.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ colours\ list\ is\ validate\ or\ not.\r\n\ @param\ colours\ The\ colours\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ colours\ list\ is\ not\ validate.\r\n
comment7.params=colour
comment7.target=void\ checkColour(java.lang.String)
comment7.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ colour\ is\ validate\ or\ not.\r\n\ @param\ colour\ The\ colour\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ colouris\ not\ validate.\r\n
comment8.params=year
comment8.target=void\ checkYear(int)
comment8.text=\r\n\ The\ method\ is\ to\ check\ if\ the\ year\ is\ validate\ or\ not.\r\n\ @param\ year\ The\ car\ year\ to\ be\ looked\ up.\ \r\n\ @throws\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ Throw\ the\ exception\ when\ the\ car\ year\ is\ not\ validate.\r\n
comment9.params=car
comment9.target=void\ validateCar(Car)
comment9.text=\r\n\ Check\ the\ entry\ with\ the\ given\ car.\r\n\ @param\ car\ One\ of\ the\ cars\ of\ the\ entry\ should\ exist,not\ be\ null.\r\n\ @throws\ Exception\ If\ the\ car\ is\ null.\r\n
numComments=11
